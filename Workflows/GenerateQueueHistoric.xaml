<Activity mc:Ignorable="sap sap2010" x:Class="GenerateQueueHistoric" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_queueName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="out_queueHistoric" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_listQueueItems" Type="InArgument(njl:JToken)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1398,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GenerateQueueHistoric_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GenerateQueueHistoric" sap:VirtualizedContainerService.HintSize="450,508" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="lastExecutionDate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;Gerando o histórico de itens da fila {0}&quot;,in_queueName)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:BuildDataTable DataTable="[out_queueHistoric]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Início&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Referencia&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Saída&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim queueItem As Newtonsoft.Json.Linq.JToken&#xD;&#xA;Dim row As DataRow&#xD;&#xA;&#xD;&#xA;For Each queueItem In in_queueItems&#xD;&#xA;&#x9;row = io_queueHistoric.NewRow()&#xD;&#xA;&#x9;row(&quot;Referencia&quot;) = queueItem(&quot;Reference&quot;).ToString&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;If queueItem(&quot;SpecificContent&quot;) IsNot Nothing AndAlso queueItem(&quot;SpecificContent&quot;).ToObject(Of JObject).Properties.Count &gt; 0 Then&#xD;&#xA;&#x9;&#x9;For Each item As JProperty In queueItem(&quot;SpecificContent&quot;).ToObject(Of JObject).Properties&#xD;&#xA;&#x9;&#x9;&#x9;If Not io_queueHistoric.Columns.Contains(item.Name) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;io_queueHistoric.Columns.Add(item.Name)&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;If  Not IsNothing(item.Name) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row(item.Name) = item.Value.ToString&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;Next item&#xD;&#xA;&#x9;End If&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;If (Not String.IsNullOrEmpty(queueItem(&quot;Output&quot;).ToString)) AndAlso (Not String.IsNullOrWhiteSpace(queueItem(&quot;Output&quot;).ToString)) AndAlso (queueItem(&quot;Output&quot;) IsNot Nothing) AndAlso (queueItem(&quot;Output&quot;).ToObject(Of JObject).Properties.Count &gt; 0) Then&#xD;&#xA;&#x9;&#x9;For Each item As JProperty In queueItem(&quot;Output&quot;).ToObject(Of JObject).Properties&#xD;&#xA;&#x9;&#x9;&#x9;If Not io_queueHistoric.Columns.Contains(item.Name) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;io_queueHistoric.Columns.Add(item.Name)&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;If  Not IsNothing(item.Name) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row(item.Name) = item.Value.ToString&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;Next item&#xD;&#xA;&#x9;End If&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;If queueItem(&quot;Status&quot;).ToString.Equals(&quot;New&quot;) Then&#xD;&#xA;&#x9;&#x9;If String.IsNullOrEmpty(queueItem(&quot;CreationTime&quot;).ToString) Then&#xD;&#xA;&#x9;&#x9;&#x9;row(&quot;Início&quot;) = String.Empty&#xD;&#xA;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;row(&quot;Início&quot;) = CDate(queueItem(&quot;CreationTime&quot;).ToString).AddHours(-3).ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#xD;&#xA;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;row(&quot;Status&quot;) = queueItem(&quot;Status&quot;).ToString&#xD;&#xA;&#x9;&#x9;row(&quot;Saída&quot;) = String.Empty&#xD;&#xA;&#x9;End If&#xD;&#xA;&#xD;&#xA;&#x9;If queueItem(&quot;Status&quot;).ToString.Equals(&quot;Successful&quot;) Then&#xD;&#xA;&#x9;&#x9;row(&quot;Início&quot;) = CDate(queueItem(&quot;StartProcessing&quot;).ToString).AddHours(-3).ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#xD;&#xA;&#x9;&#x9;row(&quot;Status&quot;) = queueItem(&quot;Status&quot;).ToString.Replace(&quot;Successful&quot;,&quot;Sucesso&quot;)&#xD;&#xA;&#x9;&#x9;If queueItem(&quot;Output&quot;) IsNot Nothing AndAlso queueItem(&quot;Output&quot;).Count &gt; 0 Then&#xD;&#xA;&#x9;&#x9;&#x9;For Each item As JProperty In queueItem(&quot;Output&quot;).ToObject(Of JObject).Properties&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;row(&quot;Saída&quot;) = String.Concat({row(&quot;Saída&quot;).ToString,item.Name,&quot;: &quot;,item.Value.ToString,&quot; &quot;})&#xD;&#xA;&#x9;&#x9;&#x9;Next&#xD;&#xA;&#x9;&#x9;End If&#xD;&#xA;&#x9;End If&#xD;&#xA;&#xD;&#xA;&#x9;If queueItem(&quot;Status&quot;).ToString.Equals(&quot;Failed&quot;) Then&#xD;&#xA;&#x9;&#x9;row(&quot;Início&quot;) = CDate(queueItem(&quot;StartProcessing&quot;).ToString).AddHours(-3).ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;)&#xD;&#xA;&#x9;&#x9;row(&quot;Status&quot;) = queueItem(&quot;ProcessingExceptionType&quot;).ToString.Replace(&quot;BusinessException&quot;,&quot;Exceção de Negócio&quot;).Replace(&quot;ApplicationException&quot;,&quot;Exceção de Aplicação&quot;)&#xD;&#xA;&#x9;&#x9;row(&quot;Saída&quot;) = String.Concat(If(queueItem(&quot;ProcessingException&quot;)(&quot;Reason&quot;) IsNot Nothing,queueItem(&quot;ProcessingException&quot;)(&quot;Reason&quot;).ToString,String.Empty),&quot;. &quot;,If(queueItem(&quot;ProcessingException&quot;)(&quot;Details&quot;) IsNot Nothing,queueItem(&quot;ProcessingException&quot;)(&quot;Details&quot;).ToString,String.Empty))&#xD;&#xA;&#x9;End If&#xD;&#xA;&#x9;io_queueHistoric.Rows.Add(row)&#xD;&#xA;Next" DisplayName="Invoke code generate queue historic" sap:VirtualizedContainerService.HintSize="388,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="njl:JToken" x:Key="in_queueItems">[in_listQueueItems]</InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_queueHistoric">[out_queueHistoric]</InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>